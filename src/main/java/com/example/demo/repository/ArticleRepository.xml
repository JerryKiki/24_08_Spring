<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.ArticleRepository">
	<update id="modifyArticle">
		UPDATE article 
		<set>
			<if test="title != null and title != ''">title = #{title},</if>
			<if test="body != null and body != ''">`body` = #{body},</if>
			updateDate = NOW()
		</set>
		WHERE id = #{id}
	</update>

	<insert id="writeArticle">
		INSERT INTO article
		SET regDate = NOW(),
		updateDate = NOW(),
		title = #{title},
		`body` = #{body},
		author = #{loginedMemberId},
		boardId = #{boardId}
	</insert>

	<select id="getArticles" resultType="Article">
		SELECT
			A.*,
			M.nickname,
			IFNULL(RC.replyNum, 0) AS replyNum
		FROM article A
		INNER JOIN `member` M
		ON A.author = M.id
		LEFT JOIN (SELECT
			articleId,
			COUNT(*) AS replyNum
		FROM replies
		GROUP BY articleId) RC
		ON A.id = RC.articleId
		<if test="boardId != -1">WHERE A.boardId = #{boardId}</if>
		ORDER BY A.id DESC;
	</select>

	<select id="getArticleById" resultType="Article">
		SELECT A.*, M.nickname, IFNULL(RC.replyNum, 0) AS replyNum
		FROM article A
		INNER JOIN `member` M
		ON A.author = M.id
		LEFT JOIN (SELECT
			articleId,
			COUNT(*) AS replyNum
		FROM replies
		GROUP BY articleId) RC
		ON A.id = RC.articleId
		WHERE A.id = #{id}
	</select>
	
	<select id="getArticlesByPage">
		SELECT A.*, M.nickname, B.`code`, IFNULL(RC.replyNum, 0) AS replyNum
		FROM article A
		INNER JOIN `member` M
		ON A.author = M.id
		INNER JOIN `board` B
		ON A.boardId = B.id
		LEFT JOIN (SELECT
			articleId,
			COUNT(*) AS replyNum
		FROM replies
		GROUP BY articleId) RC
		ON A.id = RC.articleId
		<if test="boardId != -1">WHERE A.boardId = #{boardId}</if>
		ORDER BY id DESC 
		LIMIT ${limitFrom}, ${limitTake}
	</select>
	
	<select id="getSearchedArticles">
		SELECT A.*, M.nickname, B.`code`, IFNULL(RC.replyNum, 0) AS replyNum
		FROM article A
		INNER JOIN `member` M
		ON A.author = M.id
		INNER JOIN `board` B
		ON A.boardId = B.id
		LEFT JOIN (SELECT
			articleId,
			COUNT(*) AS replyNum
		FROM replies
		GROUP BY articleId) RC
		ON A.id = RC.articleId
		WHERE ${searchItem} LIKE #{searchKeyword}
		<if test="boardId != -1">AND A.boardId = #{boardId}</if>
		ORDER BY id DESC
	</select>
	
	<select id="getSearchedArticlesByPage">
		SELECT A.*, M.nickname, B.`code`, IFNULL(RC.replyNum, 0) AS replyNum
		FROM article A
		INNER JOIN `member` M
		ON A.author = M.id
		INNER JOIN `board` B
		ON A.boardId = B.id
		LEFT JOIN (SELECT
			articleId,
			COUNT(*) AS replyNum
		FROM replies
		GROUP BY articleId) RC
		ON A.id = RC.articleId
		WHERE ${searchItem} LIKE #{searchKeyword}
		<if test="boardId != -1">AND A.boardId = #{boardId}</if>
		ORDER BY id DESC 
		LIMIT ${limitFrom}, ${limitTake}
	</select>
</mapper>